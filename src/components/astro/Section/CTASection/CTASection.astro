---
import GlobeLoader from "@/components/react/GlobeLoader";
import ArrowRightShort from "../../ui/ArrowRightShort.astro";
---

<section
	id="getstarted"
	class="relative flex w-full flex-col items-center justify-center rounded-[20px] bg-primary text-primary-foreground ~pt-16/52 md:rounded-[40px] lg:rounded-[60px]">
	<div
		id="ctaSection"
		class="relative grid w-full grid-cols-[auto_1fr] gap-[5vw] justify-between px-6 sm:px-12 md:px-16 3xl:max-w-[95vw]">
		<p
			class="mutedText mutedText relative left-0 col-start-[2] row-start-1 ml-auto lg:col-start-[1]">
			/ get started /
		</p>
		<div
			class="col-span-2 col-start-1 row-start-1 md:-mt-4 lg:col-span-1 lg:col-start-2 lg:-mt-2">
			<h1
				class="whitespace-nowrap text-2xl sm:text-3xl leading-[1] tracking-tight md:text-[7vw] md:leading-[1] 3xl:text-[130px]">
				Launch Your Website <br />
				<span>Now</span>
			</h1>
			<!-- <CTAPath /> -->
			<div
				class="mx-auto flex flex-col gap-10 ~py-6/24 md:flex-row md:gap-[5vw]">
				<div
					class="order-last flex flex-1 flex-col gap-6 md:order-first md:gap-10">
					<p
						class="flex flex-col gap-1 text-sm leading-[1.4] text-primary-foreground/70 md:gap-3 md:leading-[1.8] lg:col-start-3 lg:text-base lg:leading-[1.8]">
						Got something to ask about? Or just want to say hi? Feel free to
						drop us a message via email or the contact form and we will get back
						to you as soon as possible.
					</p>
					<div class="flex flex-col md:gap-3">
						<p class="mutedText mutedTextDark">contact us</p>
						<ul
							class="flex flex-col text-base font-normal text-primary-foreground/70 md:gap-2">
							<li>
								<a href="mailto:samyung@stablestudio.org"
									>samyung@stablestudio.org</a
								>
							</li>
							<li><a href="https://sam.partialty.com">Sam's Homepage</a></li>
						</ul>
					</div>
				</div>
				<form id="contactForm" class="flex flex-1 flex-col gap-8">
					<input
						required
						name="name"
						autocorrect="off"
						autocapitalize="off"
						spellcheck="false"
						autocomplete="nickname"
						type="text"
						placeholder="how should we call you"
						class="mutedTextInput text-normal h-[50px] border-b border-border/30 bg-transparent text-base font-normal transition-all focus:border-border"
					/>
					<input
						required
						name="email"
						autocorrect="off"
						autocapitalize="off"
						spellcheck="false"
						autocomplete="email"
						type="email"
						placeholder="email address"
						class="mutedTextInput text-normal h-[50px] border-b border-border/30 bg-transparent text-base font-normal transition-all focus:border-border"
					/>
					<textarea
						required
						name="enquiry"
						placeholder="enquiry"
						class="mutedTextInput text-normal m-0 h-[80px] border-b border-border/30 bg-transparent p-0 text-base font-normal outline-none transition-all focus:border-border"
					></textarea>

					<div class="max-h-[2rem] overflow-hidden">
						<p
							id="formSubmitText"
							class="max-h-full text-xs leading-[1rem] text-muted-foreground">
							Don't worry, we don't send annoying newsletters or promotional
							emails.
						</p>

						<p
							id="formSubmitTextSuccess"
							class="hidden max-h-full text-xs font-normal leading-[1rem] text-primary-foreground/70">
							We have received your message!
						</p>
						<p
							id="formSubmitTextWarn"
							class="hidden max-h-full text-xs font-normal leading-[1rem] text-primary-foreground/70">
							Hey, it seems like you have contacted us before. You can directly
							send us an email if that's the case.
						</p>
						<p
							id="formSubmitTextError"
							class="hidden max-h-full text-xs font-normal leading-[1rem] text-primary-foreground/70">
							Ooops, something went wrong. Please try again later.
						</p>
					</div>

					<button
						class="flex items-center gap-1 self-start rounded bg-background px-3 py-4 text-primary outline-none md:gap-3 md:px-5 md:py-4">
						<span class="size-4 text-muted-foreground md:size-6"
							><ArrowRightShort /></span
						>
						<span class="mt-[2px] block">Send a message</span>
					</button>
				</form>
			</div>
		</div>
	</div>
	<div
		id="globeContainer"
		class="flex w-full items-center justify-center px-6 ~pb-6/24 sm:px-12 md:px-16 3xl:max-w-[95vw]">
		<!-- <Globe /> -->
		<GlobeLoader client:load />
	</div>
</section>

<style is:global>
	#ctaSection {
		grid-template-columns: auto min-content;
	}
	@media screen and (min-width: 64rem) {
		/* lg, 1024px */
		#ctaSection {
			grid-template-columns: 10vw auto;
		}
	}
</style>

<style>
	.mutedText {
		@apply whitespace-nowrap text-[0.65rem] font-normal uppercase !leading-7 text-background/70 md:text-xs lg:mx-auto;
	}
	.mutedTextDark {
		@apply whitespace-nowrap text-[0.65rem] font-normal uppercase !leading-7 text-muted-foreground md:text-xs lg:mx-auto;
	}
	.mutedTextInput::placeholder {
		@apply whitespace-nowrap text-[0.65rem] font-normal uppercase !leading-7 text-muted-foreground md:text-xs lg:mx-auto;
	}
</style>

<script>
	import gsap from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const formSubmitText = document.getElementById(
		"formSubmitText",
	) as HTMLDivElement | null;
	const formSubmitTextSuccess = document.getElementById(
		"formSubmitTextSuccess",
	) as HTMLDivElement | null;
	const formSubmitTextWarn = document.getElementById(
		"formSubmitTextWarn",
	) as HTMLDivElement | null;
	const formSubmitTextError = document.getElementById(
		"formSubmitTextError",
	) as HTMLDivElement | null;
	const submitSuccessAnim = (showEl: HTMLElement | null) => {
		gsap.set(formSubmitText, { display: "none" });
		gsap.set(formSubmitTextSuccess, { display: "none" });
		gsap.set(formSubmitTextWarn, { display: "none" });
		gsap.set(formSubmitTextError, { display: "none" });

		gsap.fromTo(
			showEl,
			{
				display: "block",
				y: 12,
			},
			{
				y: 0,
				duration: 1,
				ease: "power3.out",
			},
		);

		setTimeout(() => {
			gsap.set(showEl, { display: "none" });
			gsap.fromTo(
				formSubmitText,
				{
					display: "block",
					y: 12,
				},
				{
					y: 0,
					duration: 1,
					ease: "power3.out",
				},
			);
		}, 3000);
	};

	let sendingMessage = false;
	const contactForm = document.getElementById(
		"contactForm",
	) as HTMLFormElement | null;
	contactForm?.addEventListener("submit", async (e) => {
		e.preventDefault();
		if (sendingMessage) return;
		sendingMessage = true;
		const formData = new FormData(contactForm);
		const data = Object.fromEntries(formData.entries()) as {
			name: string;
			email: string;
			enquiry: string;
		};

		if (
			data.name.trim() === "" ||
			data.email.trim() === "" ||
			data.enquiry.trim() === ""
		) {
			alert("Please fill in all fields");
			return;
		}
		if (
			data.name.length > 256 ||
			data.email.length > 256 ||
			data.enquiry.length > 3000
		) {
			alert("Please enter a shorter name/email/enquiry");
			return;
		}

		try {
			const res = await fetch("https://stablestudio.org/wrangler", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					email: data.email,
					name: data.name,
					enquiry: data.enquiry,
				}),
			});

			if (res.status === 201) {
				submitSuccessAnim(formSubmitTextSuccess);
				contactForm?.reset();
			} else if (res.status === 200) {
				submitSuccessAnim(formSubmitTextWarn);
				contactForm?.reset();
			} else {
				submitSuccessAnim(formSubmitTextError);
				const json = await res.json();
				console.error(json);
			}
		} catch (e) {
			submitSuccessAnim(formSubmitTextError);
			console.error(e);
		}

		sendingMessage = false;
	});

	window.ctaSectionReady = true;
</script>
