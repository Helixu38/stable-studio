---
import { indexSchemaMarkup } from "@/lib/schemaMarkup";
import { SEO } from "astro-seo";
import Layout from "../layouts/Layout.astro";
import ServiceSection from "@/components/astro/Section/ServiceSection/ServiceSection.astro";
import ProcessSection from "@/components/astro/Section/ProcessSection/ProcessSection.astro";
import PriceSection from "@/components/astro/Section/PriceSection/PriceSection.astro";
import LandingSection from "@/components/astro/Section/LandingSection.astro";
import HeaderSection from "@/components/astro/Section/HeaderSection.astro";
import MissionSection from "@/components/astro/Section/MissionSection.astro";
import FAQSection from "@/components/astro/Section/FAQSection/FAQSection.astro";
import GeometrySquare from "@/components/astro/GeometrySquare.astro";
import CTASection from "@/components/astro/Section/CTASection/CTASection.astro";
---

<!-- TODO: company icon --><!-- TODO: add labels and enable anchor links scrolling --><!-- TODO: draw all images and icons (including redesigning the horizontal divider, service animation, pricing animation and cta animation) --><!-- TODO: footer --><!-- TODO: tidy tailwind styles -->
<!-- <div class="relative">
	<div
		id="cursorContainer"
		class="pointer-events-none absolute left-0 top-0 z-[999]">
		<div
			id="faqCursor"
			class="pointer-events-none absolute size-32 origin-center opacity-0">
			<GeometrySquare />
		</div>
	</div> -->
	<Layout>
		<SEO
			slot="head"
			title="Yung Chin Pang, Sam"
			description="I'm Sam, a fullstack dev who also do freelances and make buttery-smooth and extremely perfomant websites. Passionate about UI/UX, cloud computing and AI."
			openGraph={{
				basic: {
					title: "Yung Chin Pang, Sam",
					type: "website",
					image: "https://avatars.githubusercontent.com/u/41984660",
					url: "https://sam.partialty.com",
				},
				optional: {
					locale: "en-US",
					siteName: "partialty",
					description:
						"I'm Sam, a fullstack dev who also do freelances and make buttery-smooth and extremely perfomant websites. Passionate about UI/UX, cloud computing and AI.",
				},
			}}
		/>

		<!-- hero, services and process section -->
		<div
			class="relative mx-auto min-h-screen px-6 sm:px-12 md:px-16 3xl:max-w-[80vw]">
			<HeaderSection />
			<main>
				<LandingSection />
				<ServiceSection />
				<ProcessSection />
			</main>
		</div>

		<main>
			<!-- pricing section -->
			<PriceSection />
		</main>

		<div class="relative mx-auto px-6 sm:px-12 md:px-16 3xl:max-w-[80vw]">
			<main>
				<MissionSection />
				<FAQSection />
			</main>
		</div>

		<main>
			<CTASection />
		</main>

		<script
			is:inline
			type="application/ld+json"
			set:html={JSON.stringify(indexSchemaMarkup)}
		/>
	</Layout>
<!-- </div> -->
<style is:global>
	#faqCursor rect {
		fill-opacity: 0.6;
	}
</style>
<script>
	import Lenis from "lenis";
	import gsap from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { horizontalLoop } from "@/lib/gsap/loop";
	import { getRelativeXY } from "@/lib/utils";
	gsap.registerPlugin(ScrollTrigger);

	const lenis = new Lenis({
		lerp: 0.4,
	});

	lenis.on("scroll", ScrollTrigger.update);

	gsap.ticker.add((time) => {
		lenis.raf(time * 1000);
	});

	gsap.ticker.lagSmoothing(0);

	// const cursorContainer = document.getElementById(
	// 	"cursorContainer",
	// ) as HTMLElement | null;
	// const faqCursor = document.getElementById("faqCursor") as HTMLElement | null;

	// gsap.set(faqCursor, {
	// 	xPercent: -50,
	// 	yPercent: -50,
	// });

	// let lastX = 0,
	// 	lastY = 0,
	// 	lastScrolled = 0,
	// 	lenisScrollListenerSet = false;
	// const xTo = gsap.quickTo(faqCursor, "x", {
	// 	duration: 0.2,
	// 	ease: "power3",
	// });
	// const yTo = gsap.quickTo(faqCursor, "y", {
	// 	duration: 0.2,
	// 	ease: "power3",
	// });
	// const cursorMoveHandler = (e: MouseEvent) => {
	// 	// const { x, y } = getRelativeXY(e, cursorContainer);
	// 	xTo(e.pageX);
	// 	yTo(e.pageY);
	// 	lastX = e.pageX;
	// 	lastY = e.pageY;
	// };
	// const cursorScrollHandler = () => {
	// 	lastY -= lastScrolled;
	// 	lastScrolled = document.documentElement.scrollTop;
	// 	lastY += lastScrolled;
	// 	gsap.set(faqCursor, { y: lastY });
	// 	gsap.set(faqCursor, { x: lastX });
	// };
	// const mm = gsap.matchMedia();
	// mm.add(
	// 	{ isLg: "(max-width: 1023px)", isDesktop: "(min-width: 1024px)" },
	// 	(context) => {
	// 		const isLg = !!context.conditions?.isLg;
	// 		if (isLg) {
	// 			if (cursorContainer) cursorContainer.style.display = "none";
	// 			return;
	// 		}

	// 		document.addEventListener("mousemove", cursorMoveHandler);
	// 		if (!lenisScrollListenerSet) {
	// 			lenis.on("scroll", cursorScrollHandler);
	// 			lenisScrollListenerSet = true;
	// 		}

	// 		if (cursorContainer) cursorContainer.style.display = "block";

	// 		() => {
	// 			document.removeEventListener("mousemove", cursorMoveHandler);
	// 			// lenis.off("scroll", cursorScrollHandler);
	// 		};
	// 	},
	// );

	// ScrollTrigger.normalizeScroll(true);

	horizontalLoop(document.getElementById("animatedDivider"), {
		repeat: -1,
		speed: 0.35,
	});
</script>
